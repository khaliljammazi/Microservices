version: '3.6'
networks:
  myNetwork:
    driver: bridge
services:
  keycloak:
    image: quay.io/keycloak/keycloak:25.0.1
    container_name: keycloak
    ports:
      - '8080:8080'
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: start-dev
    volumes:
      - keycloak-data:/opt/jboss/keycloak/standalone/data
    networks:
      - myNetwork

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
    - '2181:2181'
    environment:
    - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
    - myNetwork

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    user: root
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./Kafka:/bitnami/kafka
    networks:
      - myNetwork
    depends_on:
      - zookeeper

  mysql:
    image: mysql:8.0.38
    container_name: mysql
    ports:
      - '3306:3306'
    environment:
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'root'
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_DATABASE: examen_db
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - myNetwork

  mongodb:
    image: mongodb/mongodb-community-server:6.0-ubi8
    container_name: mongodb
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    networks:
      - myNetwork

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile-config-server
    container_name: config-server
    restart: on-failure
    ports:
      - '8888:8888'
    volumes:
      - ./config-server/target:/config-server
    networks:
      - myNetwork

  eureka-server:
    build:
      context: ./discovery-service
      dockerfile: Dockerfile-eureka
    container_name: eureka-server
    restart: on-failure
    ports:
      - '8761:8761'
    environment:
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - EUREKA_INSTANCE_HOSTNAME=eureka-server
    volumes:
      - ./discovery-service/target:/eureka-server
    networks:
      - myNetwork

  gateway-server:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile-gateway
    container_name: gateway-server
    restart: on-failure
    ports:
      - '8077:8077'
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
      - config-server
    volumes:
      - ./gateway-service/target:/gateway-server
    networks:
      - myNetwork

  ms-examen:
    build:
      context: ./ms-examen
      dockerfile: Dockerfile-ms-examen
    container_name: ms-examen
    restart: on-failure
    ports:
      - '8087:8087'
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/realm
      KEYCLOAK_JWK_SET_URI: http://keycloak:8080/realms/realm/protocol/openid-connect/certs
      CONFIG_SERVER: optional:configserver:http://config-server:8888
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/examen_db
      SPRING_DATASOURCE_USERNAME: 'root'
      SPRING_DATASOURCE_PASSWORD: 'root'
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - ./ms-examen/target:/ms-examen
    depends_on:
      - mysql
      - kafka
      - config-server
      - eureka-server
      - gateway-server
      - keycloak
    networks:
      - myNetwork

  ms-etudiant:
    build:
      context: ./ms-etudiant
      dockerfile: Dockerfile-ms-etudiant
    container_name: ms-etudiant
    restart: on-failure
    ports:
      - '8086:8086'
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/etudiant_db
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/realm
      KEYCLOAK_JWK_SET_URI: http://keycloak:8080/realms/realm/protocol/openid-connect/certs
      CONFIG_SERVER: optional:configserver:http://config-server:8888
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - ./ms-etudiant/target:/ms-etudiant
    depends_on:
      - mongodb
      - kafka
      - config-server
      - eureka-server
      - gateway-server
      - keycloak
    networks:
      - myNetwork

volumes:
  mysql-data:
  mongo-data:
  keycloak-data:
